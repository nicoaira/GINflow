/*
 nextflow.config - Default pipeline parameters
*/
params.input               =  null
params.outdir              = 'results'
params.model_path          = 'saved_model/ResNet-Secondary.pth'
params.structure_column_name   = 'secondary_structure'
params.structure_column_num    = null
params.header              = true
params.device              = 'cpu'
params.num_workers         = 4
params.subgraphs           = false
params.L                   = null
params.keep_paired_neighbors  = false
params.retries             = 0

params.embedding_col       = 'embedding_vector'
params.keep_cols           = 'exon_id'
params.num_workers_dist    = 1
params.device_dist         = 'cpu'
params.batch_size          = 1000
params.mode                = 1
params.id_column           = 'exon_id'
params.query               = null
params.top_n               = 10
params.embeddings_file     = null
params.mask_threshold      = 0.3

// aggregation defaults
params.alpha1                  = 0.25
params.alpha2                  = 0.24
params.beta1                   = 0.0057
params.beta2                   = 1.15
params.gamma                   = 0.41
params.percentile              = 1


// enable/disable drawing of top‚ÄêN structure pairs
params.draw_pairs          = true


//plots

params.plot_distances_distribution =  true
params.hist_seed                  = 42
params.hist_frac                  = 0.001
params.hist_bins                  = 200

params.plot_score_distribution   = true
params.score_bins                = 30


docker.enabled = true

process {
  withName: DRAW_CONTIG_SVGS { container = 'docker.io/nicoaira/gin-draw-pairs:latest' }
  withName: DRAW_UNAGG_SVGS { container = 'docker.io/nicoaira/gin-draw-pairs:latest' }
  withName: GENERATE_AGGREGATED_REPORT    { container = 'docker.io/nicoaira/ginfinity-report:latest' }
  withName: GENERATE_UNAGGREGATED_REPORT    { container = 'docker.io/nicoaira/ginfinity-report:latest' }
}


//report
// define a timestamp and reports directory
timestamp   = new Date().format('yyyyMMdd_HHmmss')
reportsDir  = "report_${timestamp}"

// ensure the directory exists
new File(reportsDir).mkdirs()

// write trace into report_<ts>/trace.tsv
trace {
  enabled = true
  file    = "${reportsDir}/trace.tsv"
}

// write pipeline HTML report into report_<ts>/report.html
report {
  enabled = true
  file    = "${reportsDir}/report.html"
}

// write timeline into report_<ts>/timeline.html
timeline {
  enabled = true
  file    = "${reportsDir}/timeline.html"
}

// write DAG into report_<ts>/flowchart.png
dag {
  enabled = true
  file    = "${reportsDir}/flowchart.png"
}
