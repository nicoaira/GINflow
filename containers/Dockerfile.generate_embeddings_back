# ----------------------------------------------------------------------------
# containers/Dockerfile.gpu  (CUDA 12.4 / Ubuntu 22.04 / PyTorch 2.6.0+cu124)
# ----------------------------------------------------------------------------

# 1) Base: NVIDIA CUDA 12.4 runtime on Ubuntu 22.04
FROM nvidia/cuda:12.4.0-runtime-ubuntu22.04

# 2) Install Python3, pip, venv, git, curl (no Java)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        python3 python3-pip python3-venv git curl \
    && rm -rf /var/lib/apt/lists/*

# 3) Create and activate a venv at /venv
RUN python3 -m venv /venv
ENV PATH="/venv/bin:${PATH}"

# 4) Install PyTorch 2.6.0+cu124 (CUDA 12.4)
RUN pip install --no-cache-dir \
        "torch==2.6.0+cu124" \
        --extra-index-url https://download.pytorch.org/whl/cu124

# 5) Install PyG (>=2.6.0).  Since PyG 2.6+ bundles GPU kernels,
#    this single command will pull in torch_scatter, torch_sparse, etc. (cu124).
RUN pip install --no-cache-dir torch-geometric

# 6) Install the rest of your dependencies (pandas, networkx, psutil, numpy)
#    plus Ginfinity itself.  Note that each version spec is quoted so that
#    the shell does not interpret `<3.0` (etc.) as a redirection.
RUN pip install --no-cache-dir \
        "pandas>=2.2,<3.0" \
        "networkx>=3.4,<4.0" \
        "psutil>=7.0,<8.0" \
        "numpy>=1.26,<3.0" \
        "git+https://github.com/nicoaira/GINFINITY.git#egg=ginfinity"

# 7) Copy your pipeline code into /app
WORKDIR /app
COPY main.nf nextflow.config ./
COPY workflows/ workflows/
COPY bin/ bin/
COPY presets/ presets/

# 8) Make helper scripts in bin/ executable
RUN chmod +x bin/*.py

# 9) Do NOT set ENTRYPOINT or CMD;
#    Nextflow on the host will run “bash -ue .command.sh” inside /workspace.
# ----------------------------------------------------------------------------
